{"version":3,"sources":["App.js","index.js"],"names":["App","useState","time","setTime","enabled","setEnabled","ref","useRef","mouseClicks$","setState","useEffect","subject$","pipe","buffer","debounceTime","tap","e","console","log","map","length","filter","subscribe","unsubscribe","useClick","event","setSubject$","current","fromEvent","useObservable","unsubscribe$","Subject","timer$","interval","takeUntil","val","next","complete","className","Math","floor","slice","onClick","title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PA8GeA,MAxEf,WAAgB,IAAD,EACWC,mBAAS,GADpB,mBACNC,EADM,KACAC,EADA,OAEiBF,oBAAS,GAF1B,mBAENG,EAFM,KAEGC,EAFH,KAIPC,EAAMC,iBAAO,OAnBrB,SAAkBC,EAAcC,GAC9BC,qBAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAWH,EACdI,KACCC,YAAOL,EAAaI,KAAKE,YAAa,OACtCC,aAAI,SAACC,GAAD,OAAOC,QAAQC,IAAIF,MACvBG,aAAI,SAACH,GAAD,OAAOA,EAAEI,UACbC,aAAO,SAACL,GAAD,OAAa,IAANA,MAEfM,WAAU,SAACN,GAAD,OAAOP,GAAS,MAC7B,OAAO,kBAAME,EAASY,kBACrB,CAACf,EAAcC,IASlBe,CA9BF,SAAuBlB,EAAKmB,GAAQ,IAAD,EACDxB,qBADC,mBAC1BU,EAD0B,KAChBe,EADgB,KAMjC,OAJAhB,qBAAU,WACHJ,EAAIqB,SACTD,EAAYE,YAAUtB,EAAIqB,QAASF,MAClC,CAACnB,EAAKmB,IACFd,EAuBckB,CAAcvB,EAAK,SACjBD,GAEvB,IAAMyB,EAAe,IAAIC,IACnBC,EAASC,YAAS,KAAMrB,KAAKsB,YAAUJ,IA4B7C,OA1BApB,qBAAU,WAOR,OANAsB,EAAOV,WAAU,WACXlB,GACFD,GAAQ,SAACgC,GAAD,OAASA,EAAM,QAIpB,WACLL,EAAaM,OACbN,EAAaO,cAEd,CAACjC,EAAS4B,EAAQF,IAgBnB,sBAAKQ,UAAU,MAAf,UACE,sBAAKA,UAAU,QAAf,UACE,gCAAQ,IAAMC,KAAKC,MAAOtC,EAAO,KAAQ,KAAKuC,OAAO,KADvD,YAGE,gCAAQ,IAAMF,KAAKC,MAAOtC,EAAO,GAAM,KAAKuC,OAAO,KAHrD,YAKE,gCAAQ,IAAMF,KAAKC,MAAMtC,EAAO,KAAKuC,OAAO,QAE9C,sBAAKH,UAAU,UAAf,UACE,wBACEI,QAAStC,EApBjB,WACEC,GAAW,GACXF,EAAQ,IANV,WACEE,GAAW,IAwBLiC,UAAWlC,EAAU,OAAS,GAC9BuC,MAAOvC,EAAU,OAAS,QAH5B,SAMGA,EACC,sBAAMkC,UAAU,gBAEhB,sBAAMA,UAAU,kBAGpB,wBAAQhC,IAAKA,EAAKqC,MAAM,OAAxB,SAEE,sBAAML,UAAU,mBAElB,wBAAQI,QA9Bd,WACEvC,EAAQ,IA6B2BwC,MAAM,QAArC,SAEE,sBAAML,UAAU,6BCnG1BM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.75cced50.chunk.js","sourcesContent":["import './App.css';\nimport { useEffect, useRef, useState } from 'react';\nimport {\n  interval,\n  Subject,\n  takeUntil,\n  buffer,\n  fromEvent,\n  filter,\n  tap,\n  map,\n  debounceTime,\n} from 'rxjs';\n\nfunction useObservable(ref, event) {\n  const [subject$, setSubject$] = useState();\n  useEffect(() => {\n    if (!ref.current) return;\n    setSubject$(fromEvent(ref.current, event));\n  }, [ref, event]);\n  return subject$;\n}\n\nfunction useClick(mouseClicks$, setState) {\n  useEffect(() => {\n    if (!mouseClicks$) return;\n    const subject$ = mouseClicks$\n      .pipe(\n        buffer(mouseClicks$.pipe(debounceTime(300))),\n        tap((e) => console.log(e)),\n        map((e) => e.length),\n        filter((e) => e === 2),\n      )\n      .subscribe((e) => setState(false));\n    return () => subject$.unsubscribe();\n  }, [mouseClicks$, setState]);\n}\n\nfunction App() {\n  const [time, setTime] = useState(0);\n  const [enabled, setEnabled] = useState(false);\n\n  const ref = useRef(null);\n  const mouseClicks$ = useObservable(ref, 'click');\n  useClick(mouseClicks$, setEnabled, enabled);\n\n  const unsubscribe$ = new Subject();\n  const timer$ = interval(1000).pipe(takeUntil(unsubscribe$));\n\n  useEffect(() => {\n    timer$.subscribe(() => {\n      if (enabled) {\n        setTime((val) => val + 1);\n      }\n    });\n\n    return () => {\n      unsubscribe$.next();\n      unsubscribe$.complete();\n    };\n  }, [enabled, timer$, unsubscribe$]);\n\n  function startHandler() {\n    setEnabled(true);\n  }\n\n  function stopHandler() {\n    setEnabled(false);\n    setTime(0);\n  }\n\n  function resetHandler() {\n    setTime(0);\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"watch\">\n        <span>{('0' + Math.floor((time / 3600) % 60)).slice(-2)}</span>\n        &nbsp;:&nbsp;\n        <span>{('0' + Math.floor((time / 60) % 60)).slice(-2)}</span>\n        &nbsp;:&nbsp;\n        <span>{('0' + Math.floor(time % 60)).slice(-2)}</span>\n      </div>\n      <div className=\"buttons\">\n        <button\n          onClick={enabled ? stopHandler : startHandler}\n          className={enabled ? 'stop' : ''}\n          title={enabled ? 'Stop' : 'Start'}\n        >\n          {/*{enabled ? 'Stop' : 'Start'}*/}\n          {enabled ? (\n            <span className=\"fas fa-stop\"></span>\n          ) : (\n            <span className=\"fas fa-play\"></span>\n          )}\n        </button>\n        <button ref={ref} title=\"Wait\">\n          {/*Wait*/}\n          <span className=\"fas fa-pause\"></span>\n        </button>\n        <button onClick={resetHandler} title=\"Reset\">\n          {/*Reset*/}\n          <span className=\"fas fa-sync-alt\"></span>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}